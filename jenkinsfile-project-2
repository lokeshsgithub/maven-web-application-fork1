 node{

echo "The branch name is : ${env.BRANCH_NAME}"
echo "The primary branch name is: ${env.BRANCH_IS_PRIMARY}"
echo "The Build number is: ${env.BUILD_NUMBER}"
echo "The display name is: ${env.BUILD_DISPLAY_NAME}"
echo "The Job name is: ${env.JOB_NAME}"
echo "The jenkins HD is: ${env.JENKINS_HOME}"
echo "The workspac is: ${env.WORKSPACE}"
echo "The jenkins url is: ${env.JENKINS_URL}"

   properties([authorizationMatrix(['USER:com.cloudbees.plugins.credentials.CredentialsProvider.Create:mithuntechnologies', 'USER:com.cloudbees.plugins.credentials.CredentialsProvider.Delete:mithuntechnologies', 'USER:com.cloudbees.plugins.credentials.CredentialsProvider.ManageDomains:mithuntechnologies', 'USER:com.cloudbees.plugins.credentials.CredentialsProvider.Update:mithuntechnologies', 'USER:com.cloudbees.plugins.credentials.CredentialsProvider.View:jaganreddy', 'USER:com.cloudbees.plugins.credentials.CredentialsProvider.View:mithuntechnologies', 'USER:hudson.model.Item.Build:jaganreddy', 'USER:hudson.model.Item.Build:mithuntechnologies', 'USER:hudson.model.Item.Cancel:mithuntechnologies', 'USER:hudson.model.Item.Configure:jaganreddy', 'USER:hudson.model.Item.Configure:mithuntechnologies', 'USER:hudson.model.Item.Delete:mithuntechnologies', 'USER:hudson.model.Item.Discover:mithuntechnologies', 'USER:hudson.model.Item.Move:mithuntechnologies', 'USER:hudson.model.Item.Read:jaganreddy', 'USER:hudson.model.Item.Read:mithuntechnologies', 'USER:hudson.model.Item.Workspace:mithuntechnologies', 'USER:hudson.model.Run.Delete:mithuntechnologies', 'USER:hudson.model.Run.Update:jaganreddy', 'USER:hudson.model.Run.Update:mithuntechnologies', 'USER:hudson.plugins.jobConfigHistory.JobConfigHistory.DeleteEntry:jaganreddy', 'USER:hudson.plugins.jobConfigHistory.JobConfigHistory.DeleteEntry:mithuntechnologies', 'USER:hudson.scm.SCM.Tag:mithuntechnologies']), buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')), parameters([choice(choices: ['mater', 'development', 'qa', 'test', 'uat'], description: 'select the branch', name: 'BranchName'), string(defaultValue: 'Lokeshreddy', description: 'override the default permissions', name: 'PersonName')]), [$class: 'JobLocalConfiguration', changeReasonComment: ''], pipelineTriggers([githubPush()])])
     
     def mavenHome = tool name : "maven.3.8.6"
  try {  
    stage('checkoutcode'){
    sendslacknotifications('STARTED')
        git credentialsId: 'a3cc0927-12e4-4932-8f53-fb3e92fe4e8b', url: 'https://github.com/lokeshsgithub/maven-web-application-fork1.git'
    }

stage('build package'){
    sh "${mavenHome}/bin/mvn clean package"
}

stage('Executing the sonarqube report'){
    sh "${mavenHome}/bin/mvn clean sonar:sonar"
}

stage('upload the artifact'){
    sh "${mavenHome}/bin/mvn clean deploy"
}

stage('Deploy the APP into tomcat server'){
    sshagent(['9f8d80c7-78a0-4d84-8eb9-bd9685a0a9bf']) {
   sh "scp -o StrictHostKeyChecking=no target/maven-web-app.war ec2-user@172.31.32.229:/opt/apache-tomcat-9.0.70/webapps/"
    }
 }
}
catch (e) {
currentBuild.result ="FAILURE"
}
finally {
sendslacknotifications(currentBuild.result)
}

}//node closing
def sendslacknotifications(String buildStatus = 'STARTED') {
  // build status of null means success
  buildStatus =  buildStatus ?: 'SUCCESS'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESS') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary,channel : '#jenkinsslacknotification')
}
